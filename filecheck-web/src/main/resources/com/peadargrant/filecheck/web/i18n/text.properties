# Copyright (C) 2014 Peadar Grant
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Index
assignments.url = Assignments URL
filecheck.web = FileCheck web
intro = FileCheck web allows you to check your assignment against predefined criteria.
further.information = Further information
github.project.page = GitHub project page
license = License
get.started = Get started
upload.your.file = Upload your file

# Upload
filecheck.upload = FileCheck
step = Step
return.to.home.page = Return to home page
select.assignment = Select assignment
upload.your.file = Upload your ZIP, JAR, WAR or EAR file
click.to.start = Click to start the process
please.note = Please note
delay.warning = depending on the size of your submission and on the check to be performed, there may be a considerable delay before the report is displayed. Please be patient, and do not repeatedly click the submit button.
upload.warning = Please select a ZIP, WAR, JAR or EAR file before submitting
please.wait = Please wait
show.specifications = Show specifications
upload.and.check = Upload and check

# Results
check.results = check results
file.name = File name
assignment = Assignment
start.time = Check started on
remote.address = Client IP address
outcome = Outcome
summary.report = Summary report
detail.report = Detail report
important.note = Important note
marks.warning = The results of this automated check do not guarantee or imply award of any marks.

# Error
error = Error
file.was.empty = File was empty

# Specs
specifications = file layout specifications
assignment.code = Assignment code
archive.requirements = Archive requirements
required.files = Required files
wildcard.checks = Wildcard checks
wildcard.checks.explanation = If any of the file patterns below match, the checks indicated (if any) will be carried out on them. For example, if *.java is a pattern, the checks corresponding to *.java will be carried out if the file code.java is found.
banned.files = Rejected files
banned.files.explanation = If any file matching the following file patterns is found, the check will fail unless marked advisory. For example, if *.exe is listed, a ZIP archive containing program.exe will fail.
archive.must.be.named = Archive must be named
must.contain.files = Your archive must contain the following files, unless marked as advisory. The checks indicated (if any) will be performed on each file.
advisory.check = advisory only
advisory.file = advisory only